---
import { config } from '../config';

export interface Props {
  currentSection?: string;
}

const { currentSection } = Astro.props;
const currentPath = Astro.url.pathname;
---

<nav class="bg-gradient-to-r from-blue-900 to-teal-800 backdrop-blur-sm border-b border-blue-700 sticky top-0 z-50 shadow-lg" role="navigation" aria-label="Main navigation">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo and Site Title -->
      <div class="flex items-center space-x-4">
        <img 
          src="/images/vra-logo.png" 
          alt="Vale Royal Abbey Golf Club Logo" 
          class="h-10 w-10 object-contain"
        />
        <div class="flex flex-col">
          <h1 class="text-lg font-bold text-white leading-tight">
            <a href="/" class="hover:text-white/80 transition-colors">
              Vale Royal Abbey Golf Club
            </a>
          </h1>
          <p class="text-sm text-white/90 leading-tight font-medium">Seniors Section</p>
        </div>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {config.navigation.primary.map((item) => {
          const isActive = item.href === '/' ? currentPath === '/' : currentPath.startsWith(item.href);
          const isExternal = item.href.startsWith('mailto:') || item.href.startsWith('http');
          const isAdmin = item.admin === true;
          
          return (
            <a
              href={item.href}
              class={`font-medium transition-all duration-200 relative group px-3 py-2 rounded-lg ${
                isAdmin
                  ? isActive
                    ? 'text-red-300 bg-red-500/20'
                    : 'text-red-300 hover:text-red-200 hover:bg-red-500/10'
                  : isActive 
                    ? 'text-white bg-white/20' 
                    : 'text-white/90 hover:text-white hover:bg-white/10'
              }`}
              {...(isExternal && { target: '_blank', rel: 'noopener noreferrer' })}
            >
              {item.label}
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-white transition-all group-hover:w-full"></span>
            </a>
          );
        })}
        
        <!-- Search Button -->
        <button 
          id="search-button"
          class="p-2 text-white/80 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200 hover:scale-105"
          aria-label="Search"
        >
          <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </button>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden flex items-center space-x-2">
        <!-- Mobile Search Button -->
        <button 
          id="mobile-search-button"
          class="p-2 text-white/80 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
          aria-label="Search"
        >
          <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </button>
        
        <button 
          id="mobile-menu-button"
          class="p-2 text-white/80 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
          aria-label="Open menu"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="md:hidden hidden bg-gradient-to-r from-blue-900 to-teal-800 backdrop-blur-sm border-t border-blue-700">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {config.navigation.primary.map((item) => {
        const isActive = item.href === '/' ? currentPath === '/' : currentPath.startsWith(item.href);
        const isExternal = item.href.startsWith('mailto:') || item.href.startsWith('http');
        const isAdmin = item.admin === true;
        
        return (
          <a
            href={item.href}
            class={`block px-3 py-2 rounded-lg font-medium transition-colors ${
              isAdmin
                ? isActive
                  ? 'text-red-300 bg-red-500/20'
                  : 'text-red-300 hover:text-red-200 hover:bg-red-500/10'
                : isActive 
                  ? 'text-white bg-white/20' 
                  : 'text-white/90 hover:text-white hover:bg-white/10'
            }`}
            {...(isExternal && { target: '_blank', rel: 'noopener noreferrer' })}
          >
            {item.label}
          </a>
        );
      })}
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        const isHidden = mobileMenu.classList.contains('hidden');
        if (isHidden) {
          mobileMenu.classList.remove('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'true');
        } else {
          mobileMenu.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
        }
      });
    }
  });
</script>